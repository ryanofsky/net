#!/sbin/runscript

depend() {
  need mysql
}

stop() {
  ebegin "Disabling NAT"
  # disable masquerading
  echo 0 > /proc/sys/net/ipv4/ip_forward
  iptables -t nat -F POSTROUTING

  # remove filters
  iptables -t filter -F FORWARD
  iptables -t filter -F MAYBE_BLACKOUT
  iptables -t filter -X MAYBE_BLACKOUT
  iptables -t filter -F ACCEPT_REGISTERED_SRC
  iptables -t filter -X ACCEPT_REGISTERED_SRC
  iptables -t filter -F ACCEPT_REGISTERED_DST
  iptables -t filter -X ACCEPT_REGISTERED_DST

  # remove redirects
  iptables -t nat -F PREROUTING
  iptables -t nat -F MAYBE_BLACKOUT
  iptables -t nat -X MAYBE_BLACKOUT
  iptables -t nat -F ACCEPT_REGISTERED
  iptables -t nat -X ACCEPT_REGISTERED
  iptables -t nat -F REDIRECT_BLOCKED
  iptables -t nat -X REDIRECT_BLOCKED
  iptables -t nat -F BLOCK
  iptables -t nat -X BLOCK
  iptables -t nat -F REGISTER
  iptables -t nat -X REGISTER
  iptables -t nat -F ACCEPT_LOCAL
  iptables -t nat -X ACCEPT_LOCAL
  eend $?
}

start() {
  ebegin "Enabling NAT"
  # enable masquerading
  echo 1 > /proc/sys/net/ipv4/ip_forward
  iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE

  # don't include traffic to sergeant benjamin's router in byte counts
  iptables -t filter -A FORWARD -i eth0 -o eth1 -d 192.168.0.1 -j ACCEPT
  iptables -t filter -A FORWARD -i eth1 -o eth0 -s 192.168.0.1 -j ACCEPT

  # forward packets only for registered comptuers
  iptables -t filter -N ACCEPT_REGISTERED_SRC
  iptables -t filter -N ACCEPT_REGISTERED_DST
  iptables -t filter -N MAYBE_BLACKOUT
  iptables -t filter -A FORWARD -i eth0 -o eth1 -j MAYBE_BLACKOUT
  iptables -t filter -A FORWARD -i eth0 -o eth1 -j ACCEPT_REGISTERED_SRC
  iptables -t filter -A FORWARD -i eth0 -o eth1 -j DROP
  iptables -t filter -A FORWARD -i eth1 -o eth0 -j MAYBE_BLACKOUT
  iptables -t filter -A FORWARD -i eth1 -o eth0 -j ACCEPT_REGISTERED_DST
  iptables -t filter -A FORWARD -i eth1 -o eth0 -j DROP

  # registration and block page redirects

  iptables -t nat -N ACCEPT_LOCAL
  iptables -t nat -A ACCEPT_LOCAL -d 10.0.0.0/8 -j ACCEPT
  iptables -t nat -A ACCEPT_LOCAL -d 127.0.0.0/8 -j ACCEPT

  iptables -t nat -N BLOCK
  iptables -t nat -A BLOCK -p udp --destination-port 53 \
    -j REDIRECT --to-ports 5300
  iptables -t nat -A BLOCK -j ACCEPT_LOCAL
  iptables -t nat -A BLOCK -p tcp --destination-port 80 \
    -j REDIRECT --to-ports 8003
  iptables -t nat -A BLOCK -j DROP

  iptables -t nat -N BLACKOUT
  iptables -t nat -A BLACKOUT -p udp --destination-port 53 \
    -j REDIRECT --to-ports 5300
  iptables -t nat -A BLACKOUT -j ACCEPT_LOCAL
  iptables -t nat -A BLACKOUT -p tcp --destination-port 80 \
    -j REDIRECT --to-ports 8002
  iptables -t nat -A BLACKOUT -j DROP

  iptables -t nat -N REGISTER
  iptables -t nat -A REGISTER -i eth0 -p udp --destination-port 53 \
    -j REDIRECT --to-ports 5300
  iptables -t nat -A REGISTER -j ACCEPT_LOCAL
  iptables -t nat -A REGISTER -i eth0 -p tcp --destination-port 80 \
    -j REDIRECT --to-ports 8001
  iptables -t nat -A BLOCK -j DROP

  iptables -t nat -N REDIRECT_BLOCKED
  iptables -t nat -N ACCEPT_REGISTERED
  iptables -t nat -N MAYBE_BLACKOUT

  # next line sends all dns to a forwarding server to deal with conntrack bug.
  # the conntrack bug causes udp packets to be redirected even after the
  # iptables rules which caused the redirects are removed. as a result, the
  # dns forwarding rules above don't work right, so we supercede them with
  # this one here which redirects to a special dnsforward.py server on 5301
  iptables -t nat -A PREROUTING -i eth0 -p udp --destination-port 53 \
    -j REDIRECT --to-ports 5301

  iptables -t nat -A PREROUTING -i eth0 -j REDIRECT_BLOCKED
  iptables -t nat -A PREROUTING -i eth0 -j MAYBE_BLACKOUT
  iptables -t nat -A PREROUTING -i eth0 -j ACCEPT_REGISTERED
  iptables -t nat -A PREROUTING -i eth0 -j REGISTER

  /root/net/bin/addhosts.py
  eend $?
}
